<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>isabelle.eclipse</groupId>
    <artifactId>isabelle.eclipse-parent</artifactId>
    <version>1.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>isabelle.eclipse.repository</artifactId>
  <packaging>eclipse-repository</packaging>

  <name>Isabelle/Eclipse Product and p2 Repository</name>

  <properties>
    <isabelle.version>isabelle2013</isabelle.version>

    <deploy.host>sftp://frs.sourceforge.net</deploy.host>
    <deploy.dir>/home/frs/project/isabelleeclipse</deploy.dir>
  </properties>

  <build>
    <extensions>
      <!-- extension to enable SCP use for deployment
           (must be added to the main build configuration) -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.4</version>
      </extension>
    </extensions>

    <plugins>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-p2-repository-plugin</artifactId>
        <version>${tycho.version}</version>
        <configuration>
          <repositoryName>Isabelle/Eclipse Updates</repositoryName>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-p2-director-plugin</artifactId>
        <version>${tycho.version}</version>
        <executions>
          <execution>
            <id>materialize-products</id>
            <goals>
              <goal>materialize-products</goal>
            </goals>
          </execution>
          <execution>
            <id>archive-products</id>
            <goals>
              <goal>archive-products</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <formats>
            <linux>tar.gz</linux>
            <macosx>tar.gz</macosx>
          </formats>
          <products>
            <product>
              <id>isabelle.eclipse.product</id>
              <archiveFileName>isabelle-eclipse-ide-${unqualifiedVersion}.${isabelle.buildId}</archiveFileName>
              <rootFolder>isabelle-eclipse-ide</rootFolder>
            </product>
          </products>
          <profile>SDKProfile</profile>
        </configuration>
      </plugin>
    </plugins>
  </build>


  <profiles>
    <profile>
      <!-- A profile to deploy nightly build artifacts to release area.
           Deploy using `mvn clean deploy -P nightly` and provide the appropriate logins
           in settings.xml. -->
      <id>nightly</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <isabelle.version>isabelle2013</isabelle.version>

        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>

        <nightly.updates.path>${isabelle.version}/updates/nightly/${timestamp}</nightly.updates.path>
        <nightly.product.path>${isabelle.version}/isabelle-eclipse-ide/nightly/${timestamp}</nightly.product.path>
        <nightly.updates.url>http://sourceforge.net/projects/isabelleeclipse/files/${nightly.updates.path}</nightly.updates.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <!-- filter composite p2 repo definitions to insert nightly updates path and timestamp
                 -->
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>copy-p2-definition</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/composite-nightly</outputDirectory>
                  <resources>          
                    <resource>
                      <directory>${project.basedir}/composite-nightly</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>              
                </configuration>            
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <version>1.0-beta-4</version>
            <executions>
              <execution>
                <id>upload-p2-repo</id>
                <phase>deploy</phase>
                <goals>
                  <goal>upload</goal>
                </goals>
                <configuration>
                  <fromDir>${project.build.directory}/repository</fromDir>
                  <includes>**</includes>
                  <url>${deploy.host}${deploy.dir}/${nightly.updates.path}</url>
                  <serverId>sourceforge</serverId>
                </configuration>
              </execution>

              <execution>
                <id>upload-products</id>
                <phase>deploy</phase>
                <goals>
                  <goal>upload</goal>
                </goals>
                <configuration>
                  <fromDir>${project.build.directory}/products</fromDir>
                  <includes>*.zip,*.tar.gz</includes>
                  <url>${deploy.host}${deploy.dir}/${nightly.product.path}</url>
                  <serverId>sourceforge</serverId>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>


    <profile>
      <!-- A special profile to regenerate composite p2 repository for Isabelle/Eclipse releases.
           This should be done when the repositories change, e.g. a new release is added - it will
           generate a composite repository.

           Running the script requires having an Eclipse installation. Run it with the following
           command:

           mvn generate-sources -P generate-composite-repo -N -Declipse.dir=ECLIPSE_DIR -Dtycho.mode=maven

           -->
      <id>generate-composite-repo</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <p2exec.dir>${project.basedir}/composite-repo</p2exec.dir>
        <repo.targetDir>${project.build.directory}/composite-repo/</repo.targetDir>
        <repo.targetDir.2012>${repo.targetDir}isabelle2012/</repo.targetDir.2012>
        <repo.name>Isabelle/Eclipse Releases</repo.name>

        <releases.isabelle2012.url>http://sourceforge.net/projects/isabelleeclipse/files/isabelle2012/updates</releases.isabelle2012.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>generate-isabelle2012</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks>
                    <delete dir="${repo.targetDir.2012}"/>
                    <mkdir dir="${repo.targetDir.2012}"/>
                    <fail unless="eclipse.dir">Eclipse path property 'eclipse.dir' not set. Indicate path to Eclipse directory using -Declipse.dir=ECLIPSE_DIR</fail>
                    <exec executable="${p2exec.dir}/comp-repo.sh"
                          dir="${p2exec.dir}">
                      <arg value="${repo.targetDir.2012}"/>
                      <arg value="--eclipse"/>
                      <arg value="${eclipse.dir}"/>
                      <arg value="--name"/>
                      <arg value="${repo.name}"/>
                      <arg value="add"/>
                      <!-- 1.0.0 release for Isabelle 2012 -->
                      <arg value="${releases.isabelle2012.url}/1.0.0/"/>
                    </exec>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
</project>
